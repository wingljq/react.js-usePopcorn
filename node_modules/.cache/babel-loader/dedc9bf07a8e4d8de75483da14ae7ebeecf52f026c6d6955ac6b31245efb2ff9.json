{"ast":null,"code":"var _jsxFileName = \"/Users/mmig/Desktop/ReactC/usepopcorn/src/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\nimport StarRating from './StarRating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [movieRating, setMovieRating] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StarRating, {\n      color: \"blue\",\n      maxRating: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" This movies was rated \", movieRating, \" star\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"UDzFpymyOAf98ThAzTB/e1LmjUE=\");\n_c = Test;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(StarRating, {\n    maxRating: 10,\n    message: ['Terrible', 'Bad', 'Not too Bad', 'Okay', 'Fair', 'Good', 'Very Good', 'Great', 'Excellent', 'Masterpiece']\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n    size: 24,\n    color: \"red\",\n    className: \"test\",\n    defaultRating: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","ReactDOM","StarRating","jsxDEV","_jsxDEV","Test","_s","movieRating","setMovieRating","children","color","maxRating","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","StrictMode","message","size","className","defaultRating","$RefreshReg$"],"sources":["/Users/mmig/Desktop/ReactC/usepopcorn/src/index.js"],"sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\nimport StarRating from './StarRating';\nfunction Test() {\n  const [movieRating, setMovieRating] = useState(0);\n  return (\n    <div>\n      <StarRating color=\"blue\" maxRating={10} />\n      <p> This movies was rated {movieRating} star</p>\n    </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <StarRating\n      maxRating={10}\n      message={[\n        'Terrible',\n        'Bad',\n        'Not too Bad',\n        'Okay',\n        'Fair',\n        'Good',\n        'Very Good',\n        'Great',\n        'Excellent',\n        'Masterpiece',\n      ]}\n    />\n    <StarRating size={24} color=\"red\" className=\"test\" defaultRating={3} />\n    <Test />\n    {/* <StarRating /> */}\n  </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;AACA;AACA,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACjD,oBACEI,OAAA;IAAAK,QAAA,gBACEL,OAAA,CAACF,UAAU;MAACQ,KAAK,EAAC,MAAM;MAACC,SAAS,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CX,OAAA;MAAAK,QAAA,GAAG,yBAAuB,EAACF,WAAW,EAAC,OAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACT,EAAA,CARQD,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAUb,MAAMY,IAAI,GAAGhB,QAAQ,CAACiB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTjB,OAAA,CAACL,KAAK,CAACuB,UAAU;EAAAb,QAAA,gBAEfL,OAAA,CAACF,UAAU;IACTS,SAAS,EAAE,EAAG;IACdY,OAAO,EAAE,CACP,UAAU,EACV,KAAK,EACL,aAAa,EACb,MAAM,EACN,MAAM,EACN,MAAM,EACN,WAAW,EACX,OAAO,EACP,WAAW,EACX,aAAa;EACb;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,eACFX,OAAA,CAACF,UAAU;IAACsB,IAAI,EAAE,EAAG;IAACd,KAAK,EAAC,KAAK;IAACe,SAAS,EAAC,MAAM;IAACC,aAAa,EAAE;EAAE;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACvEX,OAAA,CAACC,IAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAEQ,CACpB,CAAC;;AAED;AACA;AACA;AAAA,IAAAC,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}